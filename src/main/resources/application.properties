spring.application.name=xmudemo
# DataSource configuration now parameterized for Docker: override via environment variables DB_URL / DB_USERNAME / DB_PASSWORD
spring.datasource.url=${DB_URL:jdbc:mysql://localhost:3306/xmudemo?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:123456}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# HikariCP connection pool optimization
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.orm.jdbc.bind=TRACE

# Redis configuration
spring.data.redis.host=${REDIS_HOST:localhost}
spring.data.redis.port=${REDIS_PORT:6379}
spring.data.redis.password=${REDIS_PASSWORD:}
spring.data.redis.database=0
spring.data.redis.timeout=2000ms
spring.data.redis.lettuce.pool.max-active=50
spring.data.redis.lettuce.pool.max-wait=2000ms
spring.data.redis.lettuce.pool.max-idle=20
spring.data.redis.lettuce.pool.min-idle=5

# Cache configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=3600000
spring.cache.redis.cache-null-values=false

# RabbitMQ configuration
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}
spring.rabbitmq.virtual-host=/
spring.rabbitmq.listener.simple.concurrency=5
spring.rabbitmq.listener.simple.max-concurrency=20
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.max-attempts=3

# JWT config (override via env JWT_SECRET)
jwt.secret=${JWT_SECRET:XMUSTUDENT_PG_ADMISSION_PLATFORM_SUPER_SECURE_JWT_SECRET_2025_09_A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P6}
jwt.expiration=86400
jwt.accessExpiration=900
jwt.refreshExpiration=604800

logging.level.root=INFO
logging.level.com.xuqinyang.xmudemo=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.org.apache.catalina=INFO

server.port=${APP_PORT:8080}
# Tomcat optimization
server.tomcat.threads.max=400
server.tomcat.threads.min-spare=50
server.tomcat.max-connections=8192
server.tomcat.accept-count=200
server.tomcat.connection-timeout=20000

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=12MB
# Upload directory can be overridden by APP_UPLOAD_DIR env
app.upload-dir=${APP_UPLOAD_DIR:uploads}

# Actuator exposure for Docker health check
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true

# Async processing configuration
spring.task.execution.pool.core-size=10
spring.task.execution.pool.max-size=50
spring.task.execution.pool.queue-capacity=1000
spring.task.execution.thread-name-prefix=async-
spring.task.scheduling.pool.size=10
